apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-placeholder-upscaler
  labels:
    release: {{ .Release.Name }}
    deployment: placeholder-upscaler
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
  selector:
    release: {{ .Release.Name }}
    deployment: placeholder-upscaler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-placeholder-upscaler
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      deployment: placeholder-upscaler
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        deployment: placeholder-upscaler
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ .Release.Name }}-downscaler
      containers:
      - name: placeholder-upscaler
        image: "{{ .Values.image }}:{{ .Values.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        livenessProbe:
          tcpSocket:
            port: 3000
        readinessProbe:
          tcpSocket:
            port: 3000
        resources:
          {{ .Values.resources | toYaml | nindent 10 }}
        env:
          - name: PLACEHOLDER_DOMAIN
            value: {{ .Values.domain }}
          - name: PLACEHOLDER_SERVICE_NAME
            value: {{ .Release.Name }}-placeholder-upscaler
          - name: PLACEHOLDER_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-placeholder-upscaler
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: "http,https"
    ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    release: {{ .Release.Name }}
    deployment: placeholder-upscaler
spec:
  {{- if .Values.ssl.enabled }}
  tls:
  - secretName: {{ .Release.Name }}-placeholder-upscaler
  {{- end }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Release.Name }}-placeholder-upscaler
          servicePort: 80
---
{{- if .Values.ssl.enabled }}
{{- if has .Values.ssl.issuer (list "letsencrypt" "letsencrypt-staging") }}
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: {{ .Release.Name }}-placeholder-upscaler
  labels:
    release: {{ .Release.Name }}
    deployment: placeholder-upscaler
spec:
  secretName: {{ .Release.Name }}-placeholder-upscaler
  dnsNames:
  - {{ .Values.domain }}
  issuerRef:
    name: {{ .Values.ssl.issuer }}
    kind: ClusterIssuer
{{- end -}}
{{- end -}}
