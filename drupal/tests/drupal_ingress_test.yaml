suite: drupal ingress
templates:
  - drupal-ingress.yaml
tests:
  - it: is a ingress
    template: drupal-ingress.yaml
    asserts:
      - isKind:
          of: Ingress

  - it: uses traefik ingress class
    template: drupal-ingress.yaml
    asserts:
      - equal:
          path: 'metadata.annotations.kubernetes\.io/ingress\.class'
          value: 'traefik'

  - it: sets correct hostname for deployment
    template: drupal-ingress.yaml
    set:
      environmentName: 'foo'
      projectName: 'bar' 
      clusterDomain: 'baz' 
    asserts:
      - equal:
          path: spec.rules[0].host
          value: 'foo.bar.baz'
  
  - it: sets correct hostname for deployment when projectName is absent
    template: drupal-ingress.yaml
    set:
      environmentName: 'foo'
      clusterDomain: 'baz' 
    asserts:
      - equal:
          path: spec.rules[0].host
          value: 'foo.namespace.baz'

  - it: directs traefik requests to drupal service by default
    template: drupal-ingress.yaml
    asserts:
      - equal:
          path: spec.rules[0].http.paths[0].backend.serviceName
          value: 'RELEASE-NAME-drupal'

  - it: directs traefik requests to varnish service when varnish is enabled
    template: drupal-ingress.yaml
    set:
      varnish.enabled: true
    asserts:
      - equal:
          path: spec.rules[0].http.paths[0].backend.serviceName
          value: 'RELEASE-NAME-varnish'

  - it: shortens long project names
    template: drupal-ingress.yaml
    set:
      projectName: 'client-fi-longclient-longproject-backend'
    asserts:
      - equal:
          path: spec.rules[0].host
          value: 'release-name.client-fi-longclient-longpra6b.silta.wdr.io'

  - it: shortens long branch names
    template: drupal-ingress.yaml
    set:
      environmentName: 'feature/my-project-shortname-12345-with-additional-description'
    asserts:
      - equal:
          path: spec.rules[0].host
          value: 'feature-my-project-shortname-12345-witdb6.namespace.silta.wdr.io'

  - it: shortens branch names more when project name is already long
    template: drupal-ingress.yaml
    set:
      projectName: 'client-fi-longclient-longproject-backend'
      environmentName: 'feature/my-project-shortname-12345-with-additional-description'
    asserts:
      - equal:
          path: spec.rules[0].host
          value: 'feature-my-projecdb6.client-fi-longclient-longpra6b.silta.wdr.io'

  - it: takes a hostname prefix
    template: drupal-ingress.yaml
    set:
      domainPrefixes: ['qux', 'quux', '*']
      environmentName: 'foo'
      projectName: 'bar'
      clusterDomain: 'baz'
    asserts:
      - equal:
          path: spec.rules[0].host
          value: 'foo.bar.baz'
      - equal:
         path: spec.rules[1].host
         value: 'qux.foo.bar.baz'
      - equal:
         path: spec.rules[2].host
         value: 'quux.foo.bar.baz'
      - equal:
         path: spec.rules[3].host
         value: '*.foo.bar.baz'

  - it: exposeDomains - uses default ingress type and has correct hostname
    template: drupal-ingress.yaml
    set:
      ingress:
        default:
          type: foo
      exposeDomains:
        bar:
          hostname: bar.baz
    asserts:
      - documentIndex: 1
        equal:
          path: 'metadata.annotations.kubernetes\.io/ingress\.class'
          value: 'foo'
  
  - it: exposeDomains - has correct hostname
    template: drupal-ingress.yaml
    set:
      exposeDomains:
        bar:
          hostname: foo.bar
    asserts:
      - documentIndex: 1
        equal:
          path: spec.rules[0].host
          value: 'foo.bar'

  - it: exposeDomains - can disable ssl for a certain ingress
    template: drupal-ingress.yaml
    set:
      ingress:
        nossl:
          tls: false
          redirect-https: false
      exposeDomains:
        foo:
          hostname: foo.bar
          ingress: nossl
    asserts:
      - documentIndex: 1
        equal:
          path: 'metadata.annotations.traefik\.ingress\.kubernetes\.io\/frontend-entry-points'
          value: 'http'
      - documentIndex: 1
        equal:
          path: 'ingress\.kubernetes\.io\/ssl-redirect'
          value: null

  - it: exposeDomains - can disable ssl redirect
    template: drupal-ingress.yaml
    set:
      ingress:
        nossl:
          redirect-https: false
      exposeDomains:
        foo:
          hostname: foo.bar
          ingress: nossl
    asserts:
      - documentIndex: 1
        equal:
          path: 'metadata.annotations.ingress\.kubernetes\.io\/ssl-redirect'
          value: null

  - it: exposeDomains - multiple hostnames can use the same ingress 
    template: drupal-ingress.yaml
    set:
      exposeDomains:
        foo:
          hostname: foo.baz
        bar:
          hostname: bar.baz
        
    asserts:
      - documentIndex: 1
        equal:
          path: 'spec.rules[1].host'
          value: 'foo.baz'
      - documentIndex: 1
        equal:
          path: 'spec.rules[0].host'
          value: 'bar.baz'

  - it: exposeDomains as list, multiple hostnames can use the same ingress [list definition to be deprecated]
    template: drupal-ingress.yaml
    set:
      exposeDomains:
        - hostname: foo.baz
        - hostname: bar.baz
    asserts:
      - documentIndex: 1
        equal:
          path: 'spec.rules[0].host'
          value: 'foo.baz'
      - documentIndex: 1
        equal:
          path: 'spec.rules[1].host'
          value: 'bar.baz'

  - it: exposeDomains - can supply staticIpAddressName for gce type ingress
    template: drupal-ingress.yaml
    set:
      exposeDomains:
        bar:
          hostname: foo.bar
          ingress: gce
      ingress:
        gce:
          staticIpAddressName: baz
    asserts:
      - documentIndex: 1
        equal:
          path: 'metadata.annotations.kubernetes\.io\/ingress\.global-static-ip-name'
          value: 'baz'
