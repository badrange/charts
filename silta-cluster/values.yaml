# Main domain of the cluster.
clusterDomain: "silta.wdr.io"

# https://github.com/helm/charts/blob/master/stable/traefik/values.yaml
traefik:
  externalTrafficPolicy: Local
  priorityClassName: "high-priority"
  rbac:
    enabled: true
  replicas: 2
  ssl:
    enabled: true
    enforced: false
    # Values from Mozilla SSL Configuration Generator
    # https://ssl-config.mozilla.org/#server=traefik&server-version=1.7.20&config=intermediate
    tlsMinVersion: "VersionTLS12"
    cipherSuites:
      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
  dashboard:
    enabled: false
    serviceType: "NodePort"
    #auth:
    #  basic: 
    #    # htpasswd -nb someuser somepass
    #    someuser: htpass_hash
  resources:
    requests:
      cpu: 50m
      memory: 128M
    limits:
      memory: 512M

ssl:
  enabled: true
  email: admin@example.com
  # Available issuers: letsencrypt-staging, letsencrypt, selfsigned, custom
  issuer: letsencrypt
  # Used when certificate type is custom
  # ca: ""
  # key: ""
  # crt: ""
  
# https://github.com/wunderio/charts/blob/master/csi-rclone/values.yaml
csi-rclone:
  enabled: false
  priorityClassName: "high-priority"
  # Use silta cluster gke credentials. This is used when remote type is set to "google cloud storage".
  useGkeAuth: false
  # Do not allow csi-rclone subchart to install default secret because we want to generate it ourselves.
  defaultParams: false
  storageClass:
    name: "silta-shared"
  params:
    remote: "s3"
    remotePath: "projectname"
    
    # Minio as S3 provider
    s3-provider: "Minio"
    s3-endpoint: "http://silta-cluster-minio:9000"
    # Default credentials of minio chart https://github.com/minio/charts/blob/master/minio/values.yaml
    s3-access-key-id: "YOURACCESSKEY"
    s3-secret-access-key: "YOURSECRETKEY"

minio:
  enabled: false

# Splash page.
splash:
  resources:
    requests:
      cpu: 10m
      memory: 10M


# SSH Jumphost settings
gitAuth:
  enabled: true
  keyserver:
    url: ''
    username: ''
    password: ''
  scope: ''
  outsideCollaborators: true
  allowedIps: []
  # Kubernetes resource allocation.
  resources: {}
  # The static IP to be used for the exposed endpoint.
  loadBalancerIP: null

# SSH keyserver (keys.[clusterDomain])
sshKeyServer:
  enabled: true
  gitauthApiToken: ''
  apiUsername: ''
  apiPassword: ''
  replicas: 1
  resources: {}
  ssl:
    enabled: true
    email: admin@example.com
    # Available issuers: letsencrypt-staging, letsencrypt, selfsigned, custom
    issuer: letsencrypt
    # Used when certificate type is custom
    # ca: ""
    # key: ""
    # crt: ""

# Deployment remover
deploymentRemover:
  enabled: true
  # Github webhooks secret
  webhooksSecret: ''
  # Kubernetes resource allocation.
  resources: {}
  ssl:
    enabled: true
    email: admin@example.com
    # Available issuers: letsencrypt-staging, letsencrypt, selfsigned, custom
    issuer: letsencrypt
    # Used when certificate type is custom
    # ca: ""
    # key: ""
    # crt: ""

# GKE Cluster settings
gke:
  keyJSON: ''
  projectName: '' 
  computeZone: ''
  clusterName: ''

# Redis DB for remover queue
# https://github.com/helm/charts/tree/master/stable/redis
redis:
  password: ''
  cluster:
    enabled: false
    slaveCount: 0

cert-manager:
  enabled: true
  email: ''

silta-downscaler:
  enabled: false

silta-proxy:
  enabled: false

instana-agent:
  enabled: false
